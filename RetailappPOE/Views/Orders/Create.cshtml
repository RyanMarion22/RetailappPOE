@model RetailappPOE.Models.Orders

@{
    ViewData["Title"] = "Create Order";
    var customers = ViewData["Customers"] as List<RetailappPOE.Models.Customers>;
    var products = ViewData["Products"] as List<RetailappPOE.Models.Product>;
}

<h1>Create Order</h1>
<form asp-action="AddOrder" method="post">

    <div class="form-group">
        <label asp-for="CustomerId" class="control-label">Customer</label>
        <select asp-for="CustomerId" class="form-control" asp-items="@(new SelectList(customers, "RowKey", "Name"))">
            <option value="">-- Select Customer --</option>
        </select>
        <span asp-validation-for="CustomerId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ProductId" class="control-label">Product</label>
        <select asp-for="ProductId" class="form-control" asp-items="@(new SelectList(products, "RowKey", "Name"))">
            <option value="">-- Select Product --</option>
        </select>
        <span asp-validation-for="ProductId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Quantity" class="control-label"></label>
        <input asp-for="Quantity" class="form-control" />
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>

    <div class="form-group mt-3">
        <input type="submit" value="Create" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
